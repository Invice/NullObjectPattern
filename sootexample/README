[Overview]
An example of how to use Soot for creating a system dependency graph.

[License]
Apache v2

[Running the examples]
Execute (and where necessary edit the) one of the files in the folder "launcher" ending with ".launch" by means of Eclipse.

**Main class**
The main class is "de.chw.sdg.Sdg".

**Output**
The program outputs a Neo4J database in the folder "neo4j-database".
You can load this folder by Neo4J's community edition database.

[Soot Specifica]

**Environment Variables**
Soot requires the following environment variables to be set:
- JAVA_HOME=<JRE location; not JDK location> (for command line parameter "prepend-classpath")

**Classpath**
Soot has its own classpath where it expects all classes which should be analyzed by soot.
So, do not mix up the classpath parameter of Java with that of Soot.

**Transformations**
Soot executes several phases.
You can add a transformer to each of the phases  
(1) to get information of it (e.g., all statements of a particular method) and
(2) to update Soot's internal program representation graph

**Command Line Parameters**
-p <phase> <option>:<value>
Changes the default <option> of the <phase> to <value>.

Example: -p wjap.cgg enabled:true

-process-dir <dir_or_jar>
Analyzes all files in the given directory or jar file; as opposed to a single java/class/jimple file. All files are considered as application classes.
